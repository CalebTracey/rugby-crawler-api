// Code generated by MockGen. DO NOT EDIT.
// Source: mapper.go

// Package dbmocks is a generated GoMock package.
package dbmocks

import (
	reflect "reflect"

	dtos "github.com/calebtracey/rugby-models/pkg/dtos"
	gomock "github.com/golang/mock/gomock"
)

// MockMapperI is a mock of MapperI interface.
type MockMapperI struct {
	ctrl     *gomock.Controller
	recorder *MockMapperIMockRecorder
}

// MockMapperIMockRecorder is the mock recorder for MockMapperI.
type MockMapperIMockRecorder struct {
	mock *MockMapperI
}

// NewMockMapperI creates a new mock instance.
func NewMockMapperI(ctrl *gomock.Controller) *MockMapperI {
	mock := &MockMapperI{ctrl: ctrl}
	mock.recorder = &MockMapperIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapperI) EXPECT() *MockMapperIMockRecorder {
	return m.recorder
}

// CreateInsertLeaderboardExec mocks base method.
func (m *MockMapperI) InsertLeaderboardExec(compIdStr, compName string, td dtos.TeamLeaderboardData) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertLeaderboardExec", compIdStr, compName, td)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateInsertLeaderboardExec indicates an expected call of CreateInsertLeaderboardExec.
func (mr *MockMapperIMockRecorder) CreateInsertLeaderboardExec(compIdStr, compName, td interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertLeaderboardExec", reflect.TypeOf((*MockMapperI)(nil).InsertLeaderboardExec), compIdStr, compName, td)
}

// CreateUpdateLeaderboardExec mocks base method.
func (m *MockMapperI) UpdateLeaderboardExec(compIdStr, compName string, td dtos.TeamLeaderboardData) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLeaderboardExec", compIdStr, compName, td)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateUpdateLeaderboardExec indicates an expected call of CreateUpdateLeaderboardExec.
func (mr *MockMapperIMockRecorder) CreateUpdateLeaderboardExec(compIdStr, compName, td interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLeaderboardExec", reflect.TypeOf((*MockMapperI)(nil).UpdateLeaderboardExec), compIdStr, compName, td)
}
